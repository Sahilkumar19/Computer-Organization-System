$date
	Tue Mar 12 23:41:59 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module universal_SR_tst $end
$var wire 4 ! out [3:0] $end
$var reg 1 " clk $end
$var reg 1 # clr $end
$var reg 1 $ left_in $end
$var reg 4 % par_in [3:0] $end
$var reg 1 & right_in $end
$var reg 2 ' sel [1:0] $end
$scope module uut $end
$var wire 1 " clk $end
$var wire 1 # clr $end
$var wire 1 $ left_in $end
$var wire 4 ( par_in [3:0] $end
$var wire 1 & right_in $end
$var wire 2 ) sel [1:0] $end
$var wire 4 * dff_out [3:0] $end
$var reg 4 + out [3:0] $end
$scope module dff0 $end
$var wire 1 & D $end
$var wire 1 " clk $end
$var wire 1 # clr $end
$var reg 1 , Q $end
$upscope $end
$scope module dff1 $end
$var wire 1 $ D $end
$var wire 1 " clk $end
$var wire 1 # clr $end
$var reg 1 - Q $end
$upscope $end
$scope module dff2 $end
$var wire 1 . D $end
$var wire 1 " clk $end
$var wire 1 # clr $end
$var reg 1 / Q $end
$upscope $end
$scope module dff3 $end
$var wire 1 0 D $end
$var wire 1 " clk $end
$var wire 1 # clr $end
$var reg 1 1 Q $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
01
00
0/
0.
0-
0,
bx +
b0 *
b0 )
b0 (
b0 '
0&
b0 %
0$
1#
0"
bx !
$end
#5
b0 !
b0 +
1"
#10
0"
0#
#15
1"
#20
0"
b1 '
b1 )
1&
#25
b1 *
1,
b1000 !
b1000 +
1"
#30
0"
b10 '
b10 )
1$
0&
#35
0,
b10 *
1-
b1 !
b1 +
1"
#40
10
0"
b11 '
b11 )
b1010 %
b1010 (
0$
#45
11
b1000 *
0-
b1010 !
b1010 +
1"
#50
0"
#55
1"
#60
0"
